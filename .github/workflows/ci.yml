name: CI

on:
  pull_request:
  push:
    branches: ["main"]

permissions:
  contents: read

defaults:
  run:
    # Setting an explicit bash shell ensures GitHub Actions enables pipefail mode too,
    # rather than only error on exit (improving failure UX when pipes are used). See:
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell
    shell: bash

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Update Rust toolchain
        run: rustup update

      - name: Rust Cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Clippy
        run: cargo clippy --all-targets --all-features --locked -- --deny warnings

      - name: rustfmt
        run: cargo fmt -- --check

      - name: Check docs
        run: RUSTDOCFLAGS="-D warnings" cargo doc --all-features --document-private-items --no-deps --locked

  test:
    name: Test
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Update Rust toolchain
        run: rustup update

      - name: Rust Cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Test
        run: cargo test --all-features --locked
